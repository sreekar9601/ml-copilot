FROM python:3.11-slim

# Set working directory
WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements first for better caching
COPY requirements.txt .

# Install Python dependencies
# Use CPU-only torch wheels for smaller image size
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r requirements.txt

# Create data directory
ENV DATA_DIR=/app/data
RUN mkdir -p /app/data

# Copy application code
COPY ./api /app/api
COPY ./ingest /app/ingest

# Pre-download the embedding model during the build to avoid runtime delays
RUN python -c "from transformers import AutoTokenizer, AutoModel; \
    model_id='nomic-ai/nomic-embed-text-v1'; \
    print('Downloading tokenizer...'); \
    AutoTokenizer.from_pretrained(model_id); \
    print('Downloading model...'); \
    AutoModel.from_pretrained(model_id, trust_remote_code=True); \
    print('Model download complete')"

# Create non-root user for security
RUN useradd --create-home --shell /bin/bash app && \
    chown -R app:app /app
USER app

# Expose port
EXPOSE 8000

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Run the application (bind to PORT if provided by platform)
CMD ["/bin/sh", "-c", "uvicorn api.main:app --host 0.0.0.0 --port ${PORT:-8000}"]

